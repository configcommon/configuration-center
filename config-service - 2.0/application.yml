spring:
#  zipkin:
#    base-url: http://39.107.24.27:41202
#   如果是测试环境则dev_model=true 不做验证码校验，自定义的属性
  dev_model: true
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  session:
    store-type: redis
  redis:
    database: 0
    host: 127.0.0.1
    password: admin
    port: 6379
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        #注册服务时使用ip地址而不是主机名
        prefer-ip-address: true
        #唯一的服务实例ID
        #ID默认为${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    inetutils:
      # 优先使用以192.168.开头的IP去注册中心注册
      preferred-networks:
        - ^192\.168.*
  messages:
    #xd-common-global-config中配置了公共的资源文件，并把国际化资源文件打包到与classes同级目录，目的是为了在jar包中可以读取到国际化配置文件，
    # 可以在项目中覆盖xd-common-global-config的国际化配置 
    # 配置国际化资源文件，配置多个资源文件使用逗号分隔，
    # 使用说明：
    # 1、basename配置多个目录会先查找当前项目中是否存在，再查找jar中是否存在资源文件
    # 2、资源文件key-value的读取顺序与配置顺序一致，及先在locale/messages查找是否存在key-value，不存在则在locale/securityMessages中再次查找
    # 3、当前项目locale/messages会完全覆盖xd-common-global-config的国际化配置的配置
    basename: locale/messages, locale/securityMessages
    
#Actuator的使用参考https://www.jianshu.com/p/1aadc4c85f51
management:
  endpoint:
    health:
      show-details: always
      sensitive: false
#  endpoints:  
#    web:
#      exposure:
#        include: "*"
#  health:
#    redis:
#      enabled: false        
  security:
    enabled: false

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
